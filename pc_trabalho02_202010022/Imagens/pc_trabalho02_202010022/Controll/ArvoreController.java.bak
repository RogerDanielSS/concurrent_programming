package Controll;

import java.net.URL;
import java.util.ResourceBundle;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;
import javafx.scene.layout.AnchorPane;
import javafx.scene.shape.Line;

public class ArvoreController implements Initializable {

@FXML
    private AnchorPane TiagoJr_AnchorPane_out;

    @FXML
    private Line Jose_Pedro_Line_out;

    @FXML
    private TextField idade_Jose_TextField_out;

    @FXML
    private TextField idade_Pedro_TextField_out;

    @FXML
    private TextField idade_PedroJr_TextField_out;

    @FXML
    private AnchorPane Joao_AnchorPane_out;

    @FXML
    private TextField idade_Joao_TextField_out;

    @FXML
    private Button Restart_Button_in;

    @FXML
    private AnchorPane PedroNeto_AnchorPane_out;

    @FXML
    private AnchorPane Tiago_AnchorPane_out;

    @FXML
    private TextField idade_PedroNeto_TextField_out;

    @FXML
    private AnchorPane AnchorPane_Arvore;

    @FXML
    private Line TiagoTiagoJr_Line_out;

    @FXML
    private AnchorPane Pedro_AnchorPane_out;

    @FXML
    private Line JoseTiago_Line_out;

    @FXML
    private TextField idade_Tiago_TextField_out;

    @FXML
    private Line PedroJr_PedroNeto_Line_out;

    @FXML
    private Line JoseJoao_Line_out;

    @FXML
    private TextField idade_TiagoJr_TextField_out;

    @FXML
    private Line Pedro_PedroJr_Line_out;

    @FXML
    private AnchorPane PedroJr_AnchorPane_out;

    @FXML
    private Button Voltar_Button_in;

    @FXML
    private AnchorPane Jose_AncherPane_out;

  @Override
  public void initialize(URL location, ResourceBundle resources) { // Inicio do metodo Initializ
    Restart_Button_in.setOnAction(event -> { // Inicio do controle do botao Iniciar
      System.out.println("Botao pressionado");
      Jose jose = new Jose();
      jose.setPriority(1);
      Jose_AncherPane_out.setVisible(true);
      jose.start();

      idade_Jose_TextField_out.setText("idade: " + idadeJose + "anos");

    }); // Fim do controle do botao Iniciar
  }// Fim do metodo initialize

  class Jose extends Thread { // Inicio da classe Jose
    // Atributos
    String nome = "Jose";
    private Counter counter = new Counter();

    public void run() {

      int idade;
      for (idade = 0; idade < 90; idade++) { // Inicio do laco for responsavel pela contagem do tempo
        try {
          sleep(1000);
        } catch (InterruptedException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }

        idade_Jose_TextField_out.setText("idade: " + idade + "anos");

        if (idade == 22) { // Faz com que quado jose tiver 22 anos, tenha seu primeiro fiho
          Pedro pedro = new Pedro();
          pedro.setPriority(1);
          nascerPedro();
          pedro.start();
        }

        if (idade == 25) {
          Tiago tiago = new Tiago();
          tiago.setPriority(1);
          tiago.start();
          JoseTiago_Line_out.setVisible(true);
          Tiago_AnchorPane_out.setVisible(true);
        }

        if (idade == 32) {
          Joao joao = new Joao();
          joao.setPriority(1);
          joao.start();
          JoseJoao_Line_out.setVisible(true);
          Joao_AnchorPane_out.setVisible(true);
        }
      } // Fim do laco for responsavel pela contagem do tempo

      idade_Jose_TextField_out.setText("Morto aos 90"); // Informa que Jose morreu no local onde era impresso a sua idade

      // System.out.println("Jose Morre");
    }// fim do metodo run

    public int getTime() {
      return counter.getTime();
    }
  }// fim da classe Jose

  class Pedro extends Thread { // Inicio da classe Pedro
    // Atributos
    String nome = "Pedro";

    public void run() {
      int idade;
      for (idade = 0; idade < 61; idade++) { // Inicio do laco for responsavel pela contagem do tempo
        try {
          sleep(1000);
        } catch (InterruptedException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
		
		idade_Pedro_TextField_out.setText("idade: " + idade + "anos"); //Mostra a idade de Pedro


        if (idade == 16) {
          PedroJr pedroJr = new PedroJr();
          pedroJr.setPriority(1);
          pedroJr.start();
          Pedro_PedroJr_Line_out_Line_out.setVisible(true);
          PedroJr_AnchorPane_out_AnchorPane_out.setVisible(true);
        }

      } // Fim do laco for responsavel pela contagem do tempo

      idade_Pedro_TextField_out.setText("Morto aos 61"); // Informa que Pedro morreu no local onde era impresso a sua idade
    }// fim do metodo run
  }// fim da classe Pedro

  class PedroJr extends Thread { // Inicio da classe Pedro Jr
    // Atributos
    String nome = "Pedro Jr";

    public void run() {
      int idade;
      for (idade = 0; idade < 35; idade++) { // Inicio do laco for responsavel pela contagem do tempo
        try {
          sleep(1000);
        } catch (InterruptedException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
		
		idade_PedroJr_TextField_out_TextField_out.setText("idade: " + idade + "anos"); //Mostra a idade de Pedro Jr

        if (idade == 30) {
          PedroNeto pedroNeto = new PedroNeto();
          pedroNeto.setPriority(1);
          pedroNeto.start();
		  PedroJr_PedroNeto_Line_out.setVisible(true);
		  PedroNeto_AnchorPane_out.setVisible(true);
        }
      } // Fim do laco while responsavel pela contagem do tempo

      idade_PedroJr_TextField_out_TextField_out.setText("Morto aos 35"); // Informa que Pedro Jr morreu no local onde era impresso a sua idade
    }// fim do metodo run

  }// fim da classe Pedro Jr

  class PedroNeto extends Thread { // Inicio da classe Pedro Neto
    // Atributos
    String nome = "Pedro Neto";

    public void run() {
      int idade;
      for (idade = 0; idade < 12; idade++) { // Inicio do laco for responsavel pela contagem do tempo
        try {
          sleep(1000);
        } catch (InterruptedException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
		
		idade_PedroNeto_TextField_out.setText("idade: " + idade + "anos");  //Mostra a idade de Pedro Neto
      } // Fim do laco for responsavel pela contagem do tempo

      idade_PedroNeto_TextField_out.setText("Morto aos 12"); // Informa que Pedro Neto morreu no local onde era impresso a sua idade
    }// fim do metodo run

  }// fim da classe Pedro Neto

  class Tiago extends Thread { // Inicio da classe Tiago
    // Atributos
    String nome = "Tiago";

    public void run() {
      int idade;
      for (idade = 0; idade < 55; idade++) { // Inicio do laco for responsavel pela contagem do tempo
        try {
          sleep(1000);
        } catch (InterruptedException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
		
		idade_Tiago_TextField_out.setText("idade: " + idade + "anos"); //Mostra a idade de Tiago

        if (idade == 20) {
          TiagoJr tiagoJr = new TiagoJr();
          tiagoJr.setPriority(1);
          tiagoJr.start();
		  TiagoTiagoJr_Line_out.setVisible(true);
		  TiagoJr_AnchorPane_out.setVisible.(true);
        }

      } // Fim do laco while responsavel pela contagem do tempo

      idade_Tiago_TextField_out.setText("Morto aos 55"); // Informa que Tiago morreu no local onde era impresso a sua idade
    }// fim do metodo run

  }// fim da classe Tiago

  class TiagoJr extends Thread { // Inicio da classe Tiago Jr
    // Atributos
    String nome = "Tiago Jr";

    public void run() {
      int idade;
      for (idade = 0; idade < 33; idade++) { // Inicio do laco for responsavel pela contagem do tempo
        try {
          sleep(1000);
        } catch (InterruptedException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
		
		idade_TiagoJr_TextField_out.setText("idade: " + idade + "anos"); //Mostra a idade de Tiago Jr
      } // Fim do laco for responsavel pela contagem do tempo

      idade_TiagoJr_TextField_out.setText("Morto aos 33"); // Informa que Tiago Jr morreu no local onde era impresso a sua idade
    }// fim do metodo run

  }// fim da classe Tiago Jr

  class Joao extends Thread { // Inicio da classe Joao
    // Atributos
    String nome = "Joao";

    public void run() {
      Counter counter = new Counter();

      int lastCounter = 0; // Cria o contador de tempo anterior para fins de controle
      while (counter.getTime() <= 55) { // Inicio do laco while responsavel pela contagem do tempo
        int time = counter.getTime(); // Cria a variavel time para fazer um menor uso do processador (nao utilizar o
                                      // metodo repetidas vezes)

        boolean oneSecondIsGone = (time != lastCounter); // Como esse laco se repete varias vezes em um segundo, um
                                                         // segundo so eh registrado quando os contadores estao
                                                         // diferentes

        if (oneSecondIsGone)
          System.out.println("idade de Joao: " + time);// Imprime o tempo #### teste ####

        lastCounter = time; // atualiza o contador de tempo anterior para realizar a verificacao de tempo
                            // corretamente
      } // Fim do laco while responsavel pela contagem do tempo

      System.out.println("Joao Morre");
    }// fim do metodo run

  }// fim da classe Joao

  class Counter {
    // atributos
    private final long creationMoment = System.currentTimeMillis();

    int getTime() {
      return (int) ((System.currentTimeMillis() - creationMoment) / 1000);
    }
  }
}// Fim da classe ArvoreController